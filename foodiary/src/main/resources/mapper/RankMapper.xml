<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.foodiary.rank.mapper.RankMapper">

    <select id="rankWeekList" resultType="com.foodiary.rank.model.RanksResponseDto">
        SELECT td.DAILY_ID, td.MEMBER_ID, td.DAILY_THUMBNAIL, td.DAILY_TITLE 
        FROM TB_DAILY td 
            LEFT JOIN TB_COMMON tc 
            ON td.DAILY_ID = tc.RANK_WEEK_DAILY_ID 
        WHERE NOT tc.RANK_WEEK_DAILY_ID is NULL
    </select>

    <select id="rankMonthList" resultType="com.foodiary.rank.model.RanksResponseDto">
        SELECT td.DAILY_ID, td.MEMBER_ID, td.DAILY_THUMBNAIL, td.DAILY_TITLE 
        FROM TB_DAILY td 
            LEFT JOIN TB_COMMON tc 
            ON td.DAILY_ID = tc.RANK_MONTH_DAILY_ID 
        WHERE NOT tc.RANK_MONTH_DAILY_ID is NULL
    </select>

    <select id="findByWeekDailyId" resultType="Integer">
        SELECT RANK_WEEK_DAILY_ID FROM TB_COMMON
        WHERE NOT RANK_WEEK_DAILY_ID is NULL
    </select>

    <select id="findByMonDailyId" resultType="Integer">
        SELECT RANK_MONTH_DAILY_ID FROM TB_COMMON
        WHERE NOT RANK_MONTH_DAILY_ID is NULL
    </select>

    <select id="findWeekByDailyId" resultType="Integer">
        SELECT RANK_WEEK_DAILY_ID FROM TB_COMMON
        WHERE RANK_WEEK_DAILY_ID = ${dailyId}
    </select>


    <select id="findMonByDailyId" resultType="Integer">
        SELECT RANK_MONTH_DAILY_ID FROM TB_COMMON
        WHERE RANK_MONTH_DAILY_ID = ${dailyId}
    </select>





    <insert id="weekWrite">
        INSERT INTO TB_COMMON (RANK_WEEK_DAILY_ID, RANK_DAILY_LIKE) (
            SELECT td.DAILY_ID, DAILY_LIKE
            FROM (
                SELECT DAILY_ID, COUNT(*) AS DAILY_LIKE 
                FROM TB_DAILY_LIKE trl 
                GROUP BY DAILY_ID 
            ) AS counts RIGHT JOIN TB_DAILY td 
            ON counts.DAILY_ID = td.DAILY_ID 
        WHERE NOT DAILY_LIKE is NULL AND td.DAILY_YN ='N' AND td.DAILY_CREATE BETWEEN DATE_ADD(NOW(), INTERVAL -1 WEEK ) AND NOW()
        ORDER BY DAILY_LIKE DESC
        LIMIT 20)
    </insert>

    <insert id="monthWrite">
        INSERT INTO TB_COMMON (RANK_MONTH_DAILY_ID, RANK_DAILY_LIKE) (
            SELECT td.DAILY_ID, DAILY_LIKE
            FROM (
                SELECT DAILY_ID, COUNT(*) AS DAILY_LIKE 
                FROM TB_DAILY_LIKE trl 
                GROUP BY DAILY_ID 
            ) AS counts RIGHT JOIN TB_DAILY td 
            ON counts.DAILY_ID = td.DAILY_ID 
        WHERE NOT DAILY_LIKE is NULL AND td.DAILY_YN ='N' AND td.DAILY_CREATE BETWEEN DATE_ADD(NOW(), INTERVAL -1 MONTH ) AND NOW()
        ORDER BY DAILY_LIKE DESC
        LIMIT 20)
    </insert>



    <delete id="rankDelete">
        DELETE FROM TB_COMMON WHERE RANK_WEEK_DAILY_ID OR RANK_MONTH_DAILY_ID
    </delete>

</mapper>