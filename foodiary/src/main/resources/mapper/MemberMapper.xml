<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.foodiary.member.mapper.MemberMapper">

    <insert id="saveMember">
        INSERT INTO TB_MEMBER (MEMBER_LOGINID, MEMBER_EMAIL, MEMBER_PASSWORD, MEMBER_NICKNAME,
        MEMBER_PROFILE, MEMBER_PATH, MEMBER_REQUIRED_TERMS, MEMBER_CHOICE_TERMS, MEMBER_CREATE, MEMBER_UPDATE)
        VALUES (#{loginId}, #{email}, #{password}, #{nickName}, #{profile}, #{memberPath}, #{requiredTerms}, #{choiceTerms}, now(), now())
	</insert>


    <select id="findByEmail" resultType="com.foodiary.member.model.MemberDto">
        SELECT * FROM TB_MEMBER 
        WHERE MEMBER_EMAIL = #{email}
	</select>

    <select id="findByEmailAndId" resultType="com.foodiary.member.model.MemberDto">
        SELECT * FROM TB_MEMBER
        WHERE MEMBER_EMAIL = #{email} AND MEMBER_LOGINID = #{loginId}
    </select>

    <select id="findByLoginIdAndPw" resultType="com.foodiary.member.model.MemberDto">
        SELECT * FROM TB_MEMBER
        WHERE MEMBER_PASSWORD = #{pw} AND MEMBER_LOGINID = #{loginId}
    </select>

    <select id="findByEmailAndPw" resultType="com.foodiary.member.model.MemberDto">
        SELECT * FROM TB_MEMBER
        WHERE MEMBER_EMAIL = #{email} AND MEMBER_PASSWORD = #{pw}
    </select>

    <select id="findByLoginId" resultType="com.foodiary.member.model.MemberDto">
        SELECT * FROM TB_MEMBER
        WHERE MEMBER_LOGINID = #{loginId}
    </select>

    <select id="findById" resultType="com.foodiary.member.model.MemberDto">
        SELECT * FROM TB_MEMBER
        WHERE MEMBER_ID = #{id}
    </select>

    <select id="findByMemberId" resultType="com.foodiary.member.model.MemberDto">
        SELECT * FROM TB_MEMBER
        WHERE MEMBER_ID = #{memberId}
    </select>

    <select id="findByNickname" resultType="com.foodiary.member.model.MemberDto">
        SELECT * FROM TB_MEMBER
        WHERE MEMBER_NICKNAME = #{nickname}
    </select>

    <insert id="saveMemberImage">
        INSERT INTO TB_MEMBER_IMAGE 
        (MEMBER_ID, MEMBER_FILE_ORIGINAL_NAME, MEMBER_FILE_FULL_NAME, MEMBER_FILE_SAVE_NAME,
        MEMBER_FILE_PATH, MEMBER_FILE_SIZE, MEMBER_FILE_TYPE, MEMBER_FILE_CREATE, MEMBER_FILE_UPDATE)
        VALUES (#{memberId}, #{memberFileOriginalName}, #{memberFileFullName}, #{memberFileSaveName}, #{memberFilePath}, #{memberFileSize}, #{memberFileType}, now(), now())
    </insert>

    <select id="findAll" resultType="com.foodiary.member.model.MemberDto">
        SELECT * FROM TB_MEMBER
    </select>

    <update id="updateMemberPassword">
        UPDATE TB_MEMBER SET 
        MEMBER_UPDATE = NOW(),
        MEMBER_PASSWORD= #{password}
        WHERE MEMBER_ID = #{id}
    </update>

    <update id="updateMemberInfo">
        UPDATE TB_MEMBER SET 
            MEMBER_UPDATE = NOW()
            ,MEMBER_NICKNAME=#{nickName}
            ,MEMBER_PROFILE=#{profile}
        WHERE MEMBER_ID = #{memberId}
    </update>

    <delete id="deleteMemberImage">
        DELETE FROM TB_MEMBER_IMAGE 
            WHERE MEMBER_ID=#{id}
    </delete>

    <select id="findByIdFile" resultType="com.foodiary.member.model.MemberImageDto">
        SELECT * FROM TB_MEMBER_IMAGE
        WHERE MEMBER_ID = #{id}
    </select>

    <select id="findByDaily" resultType="com.foodiary.daily.model.DailyDto">
        SELECT 
            DAILY_ID, MEMBER_ID, DAILY_WRITER, DAILY_TITLE, DAILY_BODY, DAILY_PATH, DAILY_CREATE, DAILY_VIEW, 
            (SELECT COUNT(*) from TB_DAILY_COMMENT tdc WHERE tdc.DAILY_ID=td.DAILY_ID) AS DAILY_COMMENT,
            (SELECT COUNT(*) from TB_DAILY_LIKE tdl WHERE tdl.DAILY_ID=td.DAILY_ID) AS DAILY_LIKE 
        FROM TB_DAILY td
        WHERE MEMBER_ID = #{id} AND DAILY_YN = 'N'
    </select>

    <select id="findByRecipe" resultType="com.foodiary.recipe.model.RecipeDto">
        SELECT 
            RECIPE_ID, MEMBER_ID, RECIPE_TITLE, RECIPE_WRITER, 
            RECIPE_VIEW, RECIPE_CREATE, RECIPE_PATH1, 
            (SELECT COUNT(*) from TB_RECIPE_COMMENT trc WHERE trc.RECIPE_ID=tr.RECIPE_ID) AS RECIPE_COMMENT,
            (SELECT COUNT(*) from TB_RECIPE_LIKE trl WHERE trl.RECIPE_ID=tr.RECIPE_ID) AS RECIPE_LIKE
        FROM TB_RECIPE tr
        WHERE MEMBER_ID = #{id} AND RECIPE_YN = 'N'
    </select>

    <select id="postScrap" resultType="com.foodiary.member.model.MemberPostScrapResponseDto">
        (SELECT tmsd.MEMBER_DAILY_SCRAP_ID AS SCRAP_ID, tmsd.MEMBER_ID AS MEMBER_ID, tmsd.DAILY_SCRAP_CREATE AS SCRAP_CREATE,
	    (CASE td.DAILY_ID WHEN 1 THEN "DAILY" ELSE "DAILY" END) AS TYPE,
            tmsd.DAILY_ID AS POST_ID, td.DAILY_TITLE AS POST_TITLE, td.DAILY_WRITER AS POST_WRITER, 
            td.DAILY_VIEW AS POST_VIEW, td.DAILY_PATH AS POST_PATH, td.DAILY_CREATE AS POST_CREATE,
	        (SELECT COUNT(*) from TB_DAILY_COMMENT tdc WHERE tdc.DAILY_ID=td.DAILY_ID) AS POST_COMMENT,
	        (SELECT COUNT(*) from TB_DAILY_LIKE tdl WHERE tdl.DAILY_ID=td.DAILY_ID) AS POST_LIKE
        from TB_DAILY_SCRAP tmsd 
            left join TB_DAILY td 
            ON tmsd.DAILY_ID = td.DAILY_ID
        WHERE tmsd.MEMBER_ID = #{memberId} AND td.DAILY_YN = 'N')
        UNION ALL
		(SELECT tmsr.MEMBER_RECIPE_SCRAP_ID, tmsr.MEMBER_ID, tmsr.RECIPE_SCRAP_CREATE,  
		    (CASE tr.RECIPE_ID WHEN 1 THEN "RECIPE" ELSE "RECIPE" END) AS TYPE,
            tmsr.RECIPE_ID, tr.RECIPE_TITLE, tr.RECIPE_WRITER, 
            tr.RECIPE_VIEW, tr.RECIPE_PATH1, tr.RECIPE_CREATE,
	        (SELECT COUNT(*) from TB_RECIPE_COMMENT trc WHERE trc.RECIPE_ID=tr.RECIPE_ID),
	        (SELECT COUNT(*) from TB_RECIPE_LIKE trl WHERE trl.RECIPE_ID=tr.RECIPE_ID)
        from TB_RECIPE_SCRAP tmsr 
            left join TB_RECIPE tr 
            ON tmsr.RECIPE_ID = tr.RECIPE_ID
        WHERE tmsr.MEMBER_ID = #{memberId} AND tr.RECIPE_YN = 'N')
        ORDER BY SCRAP_CREATE DESC
    </select>

    <select id="postLike" resultType="com.foodiary.member.model.MemberPostLikeResponseDto">
        (SELECT tdl.DAILY_LIKE_ID AS LIKE_ID, tdl.DAILY_ID AS POST_ID, 
            tdl.MEMBER_ID, td.DAILY_TITLE AS POST_TITLE, td.DAILY_WRITER AS POST_WRITER, tdl.DAILY_LIKE_CREATE AS LIKE_CREATE,
            td.DAILY_VIEW AS POST_VIEW, td.DAILY_PATH AS POST_PATH, td.DAILY_CREATE AS POST_CREATE, (CASE
            tdl.DAILY_ID WHEN 1 THEN "DAILY" ELSE "DAILY" END) AS TYPE,
            (SELECT COUNT(*) from TB_DAILY_COMMENT tdc WHERE tdc.DAILY_ID=td.DAILY_ID) AS POST_COMMENT,
            (SELECT COUNT(*) from TB_DAILY_LIKE tdl WHERE tdl.DAILY_ID=td.DAILY_ID) AS POST_LIKE
        FROM TB_DAILY_LIKE tdl 
            right join TB_DAILY td 
            ON tdl.DAILY_ID = td.DAILY_ID 
        WHERE tdl.MEMBER_ID = #{memberId} AND td.DAILY_YN = 'N'
       	ORDER BY tdl.DAILY_LIKE_CREATE)
        UNION ALL
        (SELECT trl.RECIPE_LIKE_ID, trl.RECIPE_ID, trl.MEMBER_ID, tr.RECIPE_TITLE, tr.RECIPE_WRITER, trl.RECIPE_LIKE_CREATE,
            tr.RECIPE_VIEW, tr.RECIPE_PATH1, tr.RECIPE_CREATE, (CASE
            trl.RECIPE_ID WHEN 1 THEN "RECIPE" ELSE "RECIPE" END) AS TYPE,
                (SELECT COUNT(*) from TB_RECIPE_COMMENT trc WHERE trc.RECIPE_ID = tr.RECIPE_ID) AS RECIPE_COMMENT,
                (SELECT COUNT(*) from TB_RECIPE_LIKE trl WHERE trl.RECIPE_ID = tr.RECIPE_ID) AS RECIPE_LIKE
        FROM TB_RECIPE_LIKE trl 
            right join TB_RECIPE tr 
            ON trl.RECIPE_ID = tr.RECIPE_ID  
        WHERE trl.MEMBER_ID = #{memberId} AND tr.RECIPE_YN = 'N'
        ORDER BY trl.RECIPE_LIKE_CREATE
        ) ORDER BY LIKE_CREATE DESC
    </select>

    <delete id="deleteDailyLike">
        DELETE FROM TB_DAILY_LIKE 
            WHERE DAILY_LIKE_ID=#{likeId} AND MEMBER_ID = #{memberId}
    </delete>

    <delete id="deleteRecipeLike">
        DELETE FROM TB_RECIPE_LIKE 
            WHERE RECIPE_LIKE_ID=#{likeId} AND MEMBER_ID = #{memberId}
    </delete>

    <select id="findByMemberIdEdit" resultType="com.foodiary.member.model.MemberEditResponseDto">
        SELECT * FROM TB_MEMBER
        WHERE MEMBER_ID = #{memberId}
    </select>

    <update id="updateMemberImageDelete">
        UPDATE TB_MEMBER SET 
        MEMBER_UPDATE = NOW(),
        MEMBER_PATH=NULL
        WHERE MEMBER_ID = #{memberId}
    </update>

    <update id="updateMemberImage">
        UPDATE TB_MEMBER SET 
        MEMBER_UPDATE = NOW(),
        MEMBER_PATH= #{path}
        WHERE MEMBER_ID = #{memberId}
    </update>

    <update id="deleteMember">
        UPDATE TB_MEMBER SET
            MEMBER_PATH = NULL,
            MEMBER_DELETE = NOW(),
            MEMBER_YN='Y'
        WHERE MEMBER_ID = #{id}
    </update>

    <update id="updateMemberPw">
        UPDATE TB_MEMBER SET 
        MEMBER_UPDATE = NOW(),
        MEMBER_PASSWORD=#{pw}
        WHERE MEMBER_EMAIL = #{email}
    </update>

    <update id="updateDailyWriter">
        UPDATE TB_DAILY SET 
        DAILY_WRITER=#{nickname}
        WHERE MEMBER_ID = #{memberId}
    </update>

    <update id="updateDailyCommentWriter">
        UPDATE TB_DAILY_COMMENT SET 
        DAILY_COMMENT_WRITER=#{nickname}
        WHERE MEMBER_ID = #{memberId}
    </update>

    <update id="updateRecipeWriter">
        UPDATE TB_RECIPE SET 
        RECIPE_WRITER=#{nickname}
        WHERE MEMBER_ID = #{memberId}
    </update>

    <update id="updateRecipeCommentWriter">
        UPDATE TB_RECIPE_COMMENT SET 
        RECIPE_COMMENT_WRITER=#{nickname}
        WHERE MEMBER_ID = #{memberId}
    </update>

    <select id="findByDailyComment" resultType="com.foodiary.member.model.MemberDailyCommentDto">
        SELECT tdc.DAILY_COMMENT_ID, tdc.DAILY_ID, tdc.DAILY_COMMENT_WRITER, 
                tdc.DAILY_COMMENT_BODY, td.DAILY_TITLE, tdc.DAILY_COMMENT_CREATE, tdc.MEMBER_ID 
                FROM TB_DAILY_COMMENT tdc LEFT JOIN TB_DAILY td 
                ON tdc.DAILY_ID  = td.DAILY_ID 
        WHERE tdc.MEMBER_ID = #{id} AND td.DAILY_YN = 'N'
    </select>

    <select id="findByRecipeComment" resultType="com.foodiary.member.model.MemberRecipeCommentDto">
        SELECT trc.RECIPE_COMMENT_ID, trc.RECIPE_ID, trc.RECIPE_COMMENT_WRITER, 
                trc.RECIPE_COMMENT_BODY, tr.RECIPE_TITLE, trc.RECIPE_COMMENT_CREATE, trc.MEMBER_ID 
                FROM TB_RECIPE_COMMENT trc LEFT JOIN TB_RECIPE tr 
                ON trc.RECIPE_ID  = tr.RECIPE_ID 
        WHERE trc.MEMBER_ID = #{id} AND tr.RECIPE_YN = 'N'
    </select>

    <delete id="deleteDailyComment">
        DELETE FROM TB_DAILY_COMMENT
        WHERE DAILY_COMMENT_ID = #{dailyCommentId}
    </delete>

    <delete id="deleteRecipeComment">
        DELETE FROM TB_RECIPE_COMMENT
        WHERE RECIPE_COMMENT_ID = #{recipeComments}
    </delete>

    <update id="updateDailyComment">
        UPDATE TB_DAILY_COMMENT
        SET DAILY_COMMENT_BODY = #{comment}, DAILY_COMMENT_UPDATE = now()
        WHERE DAILY_COMMENT_ID = #{dailyCommentId}
    </update>

    <update id="updateRecipeComment">
        UPDATE TB_RECIPE_COMMENT
        SET RECIPE_COMMENT_BODY = #{comment}, RECIPE_COMMENT_UPDATE = now()
        WHERE RECIPE_COMMENT_ID = #{recipeCommentId}
    </update>


    <select id="findByNotice" resultType="com.foodiary.member.model.MemberNoticeResponseDto">
        SELECT * FROM TB_NOTICE 
	</select>

    <select id="findByNoticeId" resultType="com.foodiary.member.model.MemberNoticeInfoResponseDto">
        SELECT * FROM TB_NOTICE 
        WHERE NOTICE_ID = #{noticeId}
	</select>

    <select id="findByFaq" resultType="com.foodiary.member.model.MemberFaqDto">
        SELECT * FROM TB_FAQ 
	</select>

    <select id="findByQuestion" resultType="com.foodiary.member.model.MemberQuestionResponseDto">
        SELECT * FROM TB_QUESTION
        WHERE MEMBER_ID = #{memberId} AND QUESTION_YN = 'N'
	</select>

    <select id="findByQuestionId" resultType="com.foodiary.member.model.MemberQuestionResponseDto">
        SELECT * FROM TB_QUESTION tq
        LEFT JOIN TB_ANSWER ta 
        ON tq.QUESTION_ID = ta.QUESTION_ID
        WHERE tq.QUESTION_ID = #{questionId} AND tq.QUESTION_YN = 'N'
	</select>

    <insert id="saveQuestion" parameterType="com.foodiary.member.model.MemberQuestionResponseDto" useGeneratedKeys="true" keyProperty="questionId" keyColumn="QUESTION_ID">
        INSERT INTO TB_QUESTION 
        (MEMBER_ID, QUESTION_TITLE, QUESTION_CONTENT, QUESTION_PATH, QUESTION_CREATE, QUESTION_UPDATE)
        VALUES (#{memberId}, #{questionTitle}, #{questionContent}, #{questionPath}, now(), now())
    </insert>

    <insert id="saveMemberQuestionImage">
        INSERT INTO TB_QUESTION_IMAGE 
        (MEMBER_ID, QUESTION_ID,QUESTION_FILE_ORIGINAL_NAME, QUESTION_FILE_FULL_NAME, QUESTION_FILE_SAVE_NAME,
        QUESTION_FILE_PATH, QUESTION_FILE_SIZE, QUESTION_FILE_TYPE, QUESTION_FILE_CREATE, QUESTION_FILE_UPDATE)
        VALUES (#{memberId}, #{questionId}, #{questionFileOriginalName}, #{questionFileFullName}, #{questionFileSaveName}, #{questionFilePath}, #{questionFileSize}, #{questionFileType}, now(), now())
    </insert>

    <select id="findByQuestionImage" resultType="com.foodiary.member.model.MemberQuestionImageDto">
        SELECT * FROM TB_QUESTION_IMAGE
        WHERE QUESTION_ID = #{questionId}
	</select>

    <delete id="deleteQuestionImage">
        DELETE FROM TB_QUESTION_IMAGE
        WHERE QUESTION_ID = #{questionId} AND MEMBER_ID = #{memberId}
	</delete>

    <update id="updateQuetion">
        UPDATE TB_QUESTION
        SET QUESTION_TITLE = #{questionTitle}, QUESTION_CONTENT = #{questionContent}, 
            QUESTION_PATH = #{questionPath}, QUESTION_UPDATE = now()
        WHERE QUESTION_ID = #{questionId} AND MEMBER_ID = #{memberId}
    </update>

    <update id="deleteQuetion">
        UPDATE TB_QUESTION
        SET QUESTION_YN = 'Y', QUESTION_UPDATE = now(), QUESTION_DELETE = now()
        WHERE QUESTION_ID = #{questionId} AND MEMBER_ID = #{memberId}
    </update>

    <select id="findByFoods" resultType="com.foodiary.member.model.MemberFoodsResponseDto">
        SELECT tmf.MEMBER_FOOD_ID, tmf.MEMBER_ID, tmf.FOOD_ID, 
            tmf.MEMBER_FOOD_LIKE, tf.FOOD_NAME, tmf.MEMBER_FOOD_CREATE  
        FROM TB_MEMBER_FOOD tmf
        LEFT JOIN TB_FOOD tf
        ON tmf.FOOD_ID = tf.FOOD_ID
        WHERE MEMBER_ID = #{memberId}
        ORDER BY MEMBER_FOOD_CREATE DESC
	</select>

    <update id="updateMemberFood">
        UPDATE TB_MEMBER_FOOD
        SET MEMBER_FOOD_LIKE = #{like}
        WHERE MEMBER_FOOD_ID = #{memberFoodId}
    </update>
    

    <select id="findByDailyCommentId" resultType="com.foodiary.member.model.MemberDailyCommentDetailResponseDto">
        SELECT tdc.DAILY_COMMENT_ID, tdc.DAILY_ID, tdc.MEMBER_ID, 
    	tdc.DAILY_COMMENT_WRITER, tdc.DAILY_COMMENT_BODY, 
    	tdc.DAILY_COMMENT_CREATE, td.DAILY_TITLE,
        (SELECT COUNT(*) from TB_DAILY_SCRAP tds WHERE tds.DAILY_ID=td.DAILY_ID) AS DAILY_SCRAP,
        (SELECT COUNT(*) from TB_DAILY_LIKE tdl WHERE tdl.DAILY_ID=td.DAILY_ID) AS DAILY_LIKE 
        FROM TB_DAILY td 
            LEFT JOIN TB_DAILY_COMMENT tdc
            ON td.DAILY_ID = tdc.DAILY_ID
        WHERE td.DAILY_ID = #{dailyId} AND DAILY_YN = 'N' AND tdc.DAILY_COMMENT_ID = #{dailyCommentId} AND tdc.MEMBER_ID = #{memberId}

	</select>

    <select id="findByRecipeCommentId" resultType="com.foodiary.member.model.MemberRecipeCommentDetailResponseDto">
        SELECT trc.RECIPE_COMMENT_ID, trc.RECIPE_ID, trc.MEMBER_ID, 
    	trc.RECIPE_COMMENT_WRITER, trc.RECIPE_COMMENT_BODY, 
    	trc.RECIPE_COMMENT_CREATE, tr.RECIPE_TITLE,
        (SELECT COUNT(*) from TB_RECIPE_SCRAP trs WHERE trs.RECIPE_ID=tr.RECIPE_ID) AS RECIPE_SCRAP,
        (SELECT COUNT(*) from TB_RECIPE_LIKE tdl WHERE tdl.RECIPE_ID=tr.RECIPE_ID) AS RECIPE_LIKE 
        FROM TB_RECIPE tr 
            LEFT JOIN TB_RECIPE_COMMENT trc
            ON tr.RECIPE_ID = trc.RECIPE_ID
        WHERE tr.RECIPE_ID = #{recipeId} AND RECIPE_YN = 'N' AND trc.RECIPE_COMMENT_ID = #{recipeCommentId} AND trc.MEMBER_ID = #{memberId}
	</select>
</mapper>